package com.myspace.sharpcoin;

/**
 * This class was automatically generated by the data modeler tool.
 */

public class TransferAssetsTask implements java.io.Serializable {

	static final long serialVersionUID = 1L;

	@org.kie.api.definition.type.Label("Amount to transfer")
	private java.lang.Float amountToTransfer;
	@org.kie.api.definition.type.Label("Transfer from")
	private java.lang.String transferFrom;
	@org.kie.api.definition.type.Label("Transfer to")
	private java.lang.String transferTo;
	@org.kie.api.definition.type.Label("Currency")
	private java.lang.String currency;

	@org.kie.api.definition.type.Label(value = "Balance on hot wallet")
	private java.lang.Float balanceOnHotWallet;

	@org.kie.api.definition.type.Label(value = "Needed amount for seamless withdrawals")
	private java.lang.Float neededAmount;

	public TransferAssetsTask() {
	}

	public java.lang.Float getAmountToTransfer() {
		return this.amountToTransfer;
	}

	public void setAmountToTransfer(java.lang.Float amountToTransfer) {
		this.amountToTransfer = amountToTransfer;
	}

	public java.lang.String getTransferFrom() {
		return this.transferFrom;
	}

	public void setTransferFrom(java.lang.String transferFrom) {
		this.transferFrom = transferFrom;
	}

	public java.lang.String getTransferTo() {
		return this.transferTo;
	}

	public void setTransferTo(java.lang.String transferTo) {
		this.transferTo = transferTo;
	}

	public java.lang.String getCurrency() {
		return this.currency;
	}

	public void setCurrency(java.lang.String currency) {
		this.currency = currency;
	}

	public java.lang.Float getBalanceOnHotWallet() {
		return this.balanceOnHotWallet;
	}

	public void setBalanceOnHotWallet(java.lang.Float balanceOnHotWallet) {
		this.balanceOnHotWallet = balanceOnHotWallet;
	}

	public java.lang.Float getNeededAmount() {
		return this.neededAmount;
	}

	public void setNeededAmount(java.lang.Float neededAmount) {
		this.neededAmount = neededAmount;
	}

	public TransferAssetsTask(java.lang.Float amountToTransfer,
			java.lang.String transferFrom, java.lang.String transferTo,
			java.lang.String currency, java.lang.Float balanceOnHotWallet,
			java.lang.Float neededAmount) {
		this.amountToTransfer = amountToTransfer;
		this.transferFrom = transferFrom;
		this.transferTo = transferTo;
		this.currency = currency;
		this.balanceOnHotWallet = balanceOnHotWallet;
		this.neededAmount = neededAmount;
	}

}